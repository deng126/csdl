package FrontEnd.NhaCungCap;

import BackEnd.QuanLyNhaCungCap.NhaCungCap;
import BackEnd.QuanLyNhaCungCap.QuanLyNhaCungCapBUS;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

public class FrontEndNhaCungCap extends javax.swing.JPanel {

    QuanLyNhaCungCapBUS nccCtrl = new QuanLyNhaCungCapBUS();

    public FrontEndNhaCungCap() {
        initComponents();
        getData();
        tbNhaCungCap.setRowHeight(20);
    }

    public void getData() {
        DefaultTableModel model = (DefaultTableModel) tbNhaCungCap.getModel();
        // Xóa dữ liệu cũ
        while (model.getRowCount() > 0) {
            model.removeRow(0);
        }
        for (NhaCungCap ncc : nccCtrl.readDB()) {
            model.addRow(ncc.toArray());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grThemSuaXoa = new javax.swing.ButtonGroup();
        sc = new javax.swing.JScrollPane();
        tbNhaCungCap = new javax.swing.JTable();
        pnTimKiem = new javax.swing.JPanel();
        btnTimKiem = new javax.swing.JButton();
        tfTimKiem = new javax.swing.JTextField();
        tfSDT = new javax.swing.JTextField();
        tfMaNCC = new javax.swing.JTextField();
        tfTenNCC = new javax.swing.JTextField();
        tfDiaChi = new javax.swing.JTextField();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(null);

        sc.setBackground(new java.awt.Color(255, 255, 255));
        sc.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        sc.setPreferredSize(new java.awt.Dimension(740, 300));

        tbNhaCungCap.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã nhà cung cấp", "Tên nhà cung cấp", "Địa chỉ", "SĐT"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbNhaCungCap.getTableHeader().setReorderingAllowed(false);
        tbNhaCungCap.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbNhaCungCapMouseClicked(evt);
            }
        });
        sc.setViewportView(tbNhaCungCap);
        tbNhaCungCap.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (tbNhaCungCap.getColumnModel().getColumnCount() > 0) {
            tbNhaCungCap.getColumnModel().getColumn(0).setPreferredWidth(10);
            tbNhaCungCap.getColumnModel().getColumn(1).setPreferredWidth(150);
            tbNhaCungCap.getColumnModel().getColumn(2).setPreferredWidth(150);
            tbNhaCungCap.getColumnModel().getColumn(3).setPreferredWidth(10);
        }

        add(sc);
        sc.setBounds(20, 70, 780, 320);

        pnTimKiem.setBackground(null
        );
        pnTimKiem.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)), "Nhập vào nhà cung cấp", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(102, 102, 102))); // NOI18N
        pnTimKiem.setPreferredSize(new java.awt.Dimension(180, 50));

        btnTimKiem.setBackground(null);
        btnTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IconImage/timkiem.png"))); // NOI18N
        btnTimKiem.setText(null);
        btnTimKiem.setBorder(null);
        btnTimKiem.setBorderPainted(false);
        btnTimKiem.setContentAreaFilled(false);
        btnTimKiem.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        tfTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfTimKiemKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout pnTimKiemLayout = new javax.swing.GroupLayout(pnTimKiem);
        pnTimKiem.setLayout(pnTimKiemLayout);
        pnTimKiemLayout.setHorizontalGroup(
            pnTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnTimKiemLayout.createSequentialGroup()
                .addComponent(tfTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnTimKiemLayout.setVerticalGroup(
            pnTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTimKiemLayout.createSequentialGroup()
                .addGroup(pnTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(tfTimKiem, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnTimKiem, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(pnTimKiem);
        pnTimKiem.setBounds(620, 10, 180, 45);

        tfSDT.setBackground(null);
        tfSDT.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)), "SĐT", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));
        add(tfSDT);
        tfSDT.setBounds(420, 480, 120, 40);

        tfMaNCC.setBackground(null);
        tfMaNCC.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)), "Mã nhà cung cấp", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));
        add(tfMaNCC);
        tfMaNCC.setBounds(140, 420, 120, 40);

        tfTenNCC.setBackground(null);
        tfTenNCC.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)), "Tên nhà cung cấp", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));
        add(tfTenNCC);
        tfTenNCC.setBounds(290, 420, 250, 40);

        tfDiaChi.setBackground(null);
        tfDiaChi.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)), "Địa chỉ", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));
        add(tfDiaChi);
        tfDiaChi.setBounds(140, 480, 250, 40);

        btnThem.setBackground(new java.awt.Color(0, 77, 97));
        btnThem.setForeground(new java.awt.Color(255, 255, 255));
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IconImage/them.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.setBorder(null);
        btnThem.setBorderPainted(false);
        grThemSuaXoa.add(btnThem);
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        add(btnThem);
        btnThem.setBounds(580, 420, 90, 30);

        btnSua.setBackground(new java.awt.Color(0, 77, 97));
        btnSua.setForeground(new java.awt.Color(255, 255, 255));
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IconImage/sua.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.setBorder(null);
        grThemSuaXoa.add(btnSua);
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        add(btnSua);
        btnSua.setBounds(580, 460, 90, 30);

        btnXoa.setBackground(new java.awt.Color(0, 77, 97));
        btnXoa.setForeground(new java.awt.Color(255, 255, 255));
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IconImage/xoa.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.setBorder(null);
        grThemSuaXoa.add(btnXoa);
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        add(btnXoa);
        btnXoa.setBounds(580, 500, 90, 30);
    }// </editor-fold>//GEN-END:initComponents

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        DefaultTableModel model = (DefaultTableModel) tbNhaCungCap.getModel();

        ArrayList<NhaCungCap> dsncc = nccCtrl.search(tfTimKiem.getText().trim());
        if (dsncc.size() > 0) {
            while (model.getRowCount() > 0) {
                model.removeRow(0);
            }
            for (NhaCungCap ncc : dsncc) {
                model.addRow(ncc.toArray());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Không tìm thấy nhà cung cấp!");
        }
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void tfTimKiemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfTimKiemKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            DefaultTableModel model = (DefaultTableModel) tbNhaCungCap.getModel();

            ArrayList<NhaCungCap> dsncc = nccCtrl.search(tfTimKiem.getText().trim());
            if (dsncc.size() > 0) {
                while (model.getRowCount() > 0) {
                    model.removeRow(0);
                }
                for (NhaCungCap ncc : dsncc) {
                    model.addRow(ncc.toArray());
                }
            } else {
                JOptionPane.showMessageDialog(this, "Không tìm thấy nhà cung cấp!");
            }
        }
    }//GEN-LAST:event_tfTimKiemKeyPressed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        JTextField[] tfTT = {tfMaNCC, tfTenNCC, tfDiaChi, tfSDT};
        for (int i = 0; i < tfTT.length; i++) {
            if (tfTT[i].getText().matches("") || tfTT[i].getText().matches("\\s+")) {
                JOptionPane.showMessageDialog(this, "Điền không đủ thông tin!");
                return;
            }
        }
        if (nccCtrl.add(tfMaNCC.getText(), tfTenNCC.getText(), tfDiaChi.getText(), tfSDT.getText())){ 
            getData();
            JOptionPane.showMessageDialog(this, "Cập nhật thông tin thành công!");
        } else {
            JOptionPane.showMessageDialog(this, "Cập nhật thông tin thất bại!");
        }
    }//GEN-LAST:event_btnThemActionPerformed
      
    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        if (tbNhaCungCap.getSelectedRow() != -1) {
            if (nccCtrl.update(tfMaNCC.getText(), tfTenNCC.getText(), tfDiaChi.getText(), tfSDT.getText())) {
                getData();
                JOptionPane.showMessageDialog(this, "Cập nhật thông tin thành công!");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Chọn nhà cung cấp cần sửa!");
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        if (tbNhaCungCap.getSelectedRow() != -1) {
            if (nccCtrl.delete(tfMaNCC.getText())) {
                getData();
                JOptionPane.showMessageDialog(this, "Cập nhật thông tin thành công!");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Chọn nhà cung cấp cần xóa!");
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void tbNhaCungCapMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbNhaCungCapMouseClicked
        DefaultTableModel model = (DefaultTableModel) tbNhaCungCap.getModel();
        tfMaNCC.setText(model.getValueAt(tbNhaCungCap.getSelectedRow(), 0).toString());
        tfTenNCC.setText(model.getValueAt(tbNhaCungCap.getSelectedRow(), 1).toString());
        tfDiaChi.setText(model.getValueAt(tbNhaCungCap.getSelectedRow(), 2).toString());
        tfSDT.setText(model.getValueAt(tbNhaCungCap.getSelectedRow(), 3).toString());
    }//GEN-LAST:event_tbNhaCungCapMouseClicked
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.ButtonGroup grThemSuaXoa;
    private javax.swing.JPanel pnTimKiem;
    private javax.swing.JScrollPane sc;
    private javax.swing.JTable tbNhaCungCap;
    private javax.swing.JTextField tfDiaChi;
    private javax.swing.JTextField tfMaNCC;
    private javax.swing.JTextField tfSDT;
    private javax.swing.JTextField tfTenNCC;
    private javax.swing.JTextField tfTimKiem;
    // End of variables declaration//GEN-END:variables
}
