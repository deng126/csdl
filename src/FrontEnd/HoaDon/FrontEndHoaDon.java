package FrontEnd.HoaDon;

import BackEnd.QuanLyChiTietHoaDon.ChiTietHoaDon;
import BackEnd.QuanLyChiTietHoaDon.QuanLyChiTietHoaDonBUS;
import BackEnd.QuanLyHoaDon.HoaDon;
import BackEnd.QuanLyHoaDon.QuanLyHoaDonBUS;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.StringTokenizer;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class FrontEndHoaDon extends javax.swing.JPanel {

    QuanLyHoaDonBUS hdCtrl = new QuanLyHoaDonBUS();
    QuanLyChiTietHoaDonBUS cthdCtrl = new QuanLyChiTietHoaDonBUS();

    /**
     * Creates new form FrontEndHoaDon
     */
    public FrontEndHoaDon() {
        initComponents();
        getDataHD();
        tbCTHD.setRowHeight(20);
        tbHD.setRowHeight(20);
    }

    public void getDataHD() {
        DefaultTableModel modelHD = (DefaultTableModel) tbHD.getModel();
        // xóa dữ liệu trong bảng
        modelHD.setRowCount(0);

        // đổ dữ liệu mới
        ArrayList<HoaDon> dshd = hdCtrl.readDB();
        for (HoaDon hd : dshd) {
            modelHD.addRow(hd.toArray());
        }

    }

    public void getDataCTHD() {
        DefaultTableModel modelCTHD = (DefaultTableModel) tbCTHD.getModel();
        // xóa dữ liệu trong bảng
        modelCTHD.setRowCount(0);

        // đổ dữ liệu mới
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scHD = new javax.swing.JScrollPane();
        tbHD = new javax.swing.JTable();
        scCTHD = new javax.swing.JScrollPane();
        tbCTHD = new javax.swing.JTable();
        lbHD = new javax.swing.JLabel();
        lbCTHD = new javax.swing.JLabel();
        btnTimKiem = new javax.swing.JButton();
        tfTimKiem = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(null);

        tbHD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã hóa đơn", "Mã NV", "Mã KH", "Ngày giờ nhập", "Tổng tiền"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbHD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbHDMouseClicked(evt);
            }
        });
        scHD.setViewportView(tbHD);
        if (tbHD.getColumnModel().getColumnCount() > 0) {
            tbHD.getColumnModel().getColumn(0).setPreferredWidth(20);
            tbHD.getColumnModel().getColumn(1).setPreferredWidth(20);
            tbHD.getColumnModel().getColumn(2).setPreferredWidth(20);
            tbHD.getColumnModel().getColumn(3).setPreferredWidth(70);
            tbHD.getColumnModel().getColumn(4).setPreferredWidth(20);
        }

        add(scHD);
        scHD.setBounds(20, 100, 440, 402);

        tbCTHD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã hóa đơn", "Mã sản phẩm", "Số lượng", "Đơn giá"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scCTHD.setViewportView(tbCTHD);

        add(scCTHD);
        scCTHD.setBounds(470, 100, 320, 402);

        lbHD.setBackground(new java.awt.Color(255, 255, 255));
        lbHD.setFont(new java.awt.Font("Myriad Pro", 0, 14)); // NOI18N
        lbHD.setForeground(new java.awt.Color(0, 77, 97));
        lbHD.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbHD.setText("HÓA ĐƠN");
        add(lbHD);
        lbHD.setBounds(190, 70, 84, 21);

        lbCTHD.setFont(new java.awt.Font("Myriad Pro", 0, 14)); // NOI18N
        lbCTHD.setForeground(new java.awt.Color(0, 77, 97));
        lbCTHD.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbCTHD.setText("CHI TIẾT HÓA ĐƠN");
        add(lbCTHD);
        lbCTHD.setBounds(590, 70, 124, 19);

        btnTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IconImage/timkiem.png"))); // NOI18N
        btnTimKiem.setBorder(null);
        btnTimKiem.setBorderPainted(false);
        btnTimKiem.setContentAreaFilled(false);
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });
        add(btnTimKiem);
        btnTimKiem.setBounds(210, 25, 20, 20);

        tfTimKiem.setForeground(new java.awt.Color(217, 217, 217));
        tfTimKiem.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tfTimKiem.setText("MM/YYYY");
        tfTimKiem.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)), "Tìm kiếm theo tháng năm", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));
        tfTimKiem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tfTimKiemMouseClicked(evt);
            }
        });
        tfTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfTimKiemKeyPressed(evt);
            }
        });
        add(tfTimKiem);
        tfTimKiem.setBounds(20, 15, 180, 39);
    }// </editor-fold>//GEN-END:initComponents

    private void tbHDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbHDMouseClicked
        DefaultTableModel modelHD = (DefaultTableModel) tbHD.getModel();
        DefaultTableModel modelCTHD = (DefaultTableModel) tbCTHD.getModel();
        if (tbHD.getSelectedRow() != -1) {
            getDataCTHD();
            for (ChiTietHoaDon cthd : cthdCtrl.search(modelHD.getValueAt(tbHD.getSelectedRow(), 0).toString())) {
                modelCTHD.addRow(cthd.toArray());
            }
        }
    }//GEN-LAST:event_tbHDMouseClicked

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        DefaultTableModel modelHD = (DefaultTableModel) tbHD.getModel();
        DefaultTableModel modelCTHD = (DefaultTableModel) tbCTHD.getModel();
        if (tfTimKiem.getText().matches("") && tfTimKiem.getText().matches("\\s+")) {
            JOptionPane.showMessageDialog(this, "Nhập [tháng]/[năm] cần tìm!");
            getDataHD();
        } else {
            String[] date = new String[5];
            StringTokenizer token = new StringTokenizer(tfTimKiem.getText().trim(), "/- ");
            int i = 0;
            while (token.hasMoreTokens()) {
                date[i] = token.nextToken();
//                    System.out.println(i + " = " + date[i]);
                i++;
            }
            ArrayList<HoaDon> dshd = hdCtrl.search(date[0], date[1]);
            if (dshd.size() > 0) {
                modelHD.setRowCount(0);
                for (HoaDon hd : dshd) {
                    modelHD.addRow(hd.toArray());
                }
            }

        }
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void tfTimKiemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfTimKiemMouseClicked
        tfTimKiem.setForeground(Color.BLACK);
        tfTimKiem.setText("");
    }//GEN-LAST:event_tfTimKiemMouseClicked

    private void tfTimKiemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfTimKiemKeyPressed
        DefaultTableModel modelHD = (DefaultTableModel) tbHD.getModel();
        DefaultTableModel modelCTHD = (DefaultTableModel) tbCTHD.getModel();
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (tfTimKiem.getText().equals("") && tfTimKiem.getText().matches("\\s+")) {
                System.out.println("RUN");
                getDataHD();
            } else {//if(tfTimKiem.getText().trim().matches("[0-9]{2}/{0-9]{4}"))
                String[] date = new String[5];
                StringTokenizer token = new StringTokenizer(tfTimKiem.getText().trim(), "/- ");
                int i = 0;
                while (token.hasMoreTokens()) {
                    date[i] = token.nextToken();
                    //                    System.out.println(i + " = " + date[i]);
                    i++;
                }
                ArrayList<HoaDon> dshd = hdCtrl.search(date[0], date[1]);
                if (dshd.size() > 0) {
                    modelHD.setRowCount(0);
                    for (HoaDon hd : dshd) {
                        modelHD.addRow(hd.toArray());
                    }
                }
            }
            //else JOptionPane.showMessageDialog(this, "Nhập [tháng]/[năm] cần tìm!");
        }
    }//GEN-LAST:event_tfTimKiemKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JLabel lbCTHD;
    private javax.swing.JLabel lbHD;
    private javax.swing.JScrollPane scCTHD;
    private javax.swing.JScrollPane scHD;
    private javax.swing.JTable tbCTHD;
    private javax.swing.JTable tbHD;
    private javax.swing.JTextField tfTimKiem;
    // End of variables declaration//GEN-END:variables
}
