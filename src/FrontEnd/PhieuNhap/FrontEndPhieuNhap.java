package FrontEnd.PhieuNhap;

import BackEnd.QuanLyChiTietPhieuNhap.ChiTietPhieuNhap;
import BackEnd.QuanLyChiTietPhieuNhap.QuanLyChiTietPhieuNhapBUS;
import BackEnd.QuanLyPhieuNhap.PhieuNhap;
import BackEnd.QuanLyPhieuNhap.QuanLyPhieuNhapBUS;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.StringTokenizer;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class FrontEndPhieuNhap extends javax.swing.JPanel {

    QuanLyPhieuNhapBUS pnCtrl = new QuanLyPhieuNhapBUS();
    QuanLyChiTietPhieuNhapBUS ctpnCtrl = new QuanLyChiTietPhieuNhapBUS();

    /**
     * Creates new form FrontEndPhieuNhap
     */
    public FrontEndPhieuNhap() {
        initComponents();
        getDataPN();
        tbCTPN.setRowHeight(20);
        tbPN.setRowHeight(20);
    }

    public void getDataPN() {
        DefaultTableModel modelPN = (DefaultTableModel) tbPN.getModel();
        // xóa dữ liệu trong bảng
        modelPN.setRowCount(0);

        // đổ dữ liệu mới
        ArrayList<PhieuNhap> dspn = pnCtrl.readDB();
        for (PhieuNhap pn : dspn) {
            modelPN.addRow(pn.toArray());
        }

    }

    public void getDataCTPN() {
        DefaultTableModel modelCTPN = (DefaultTableModel) tbCTPN.getModel();
        // xóa dữ liệu trong bảng
        modelCTPN.setRowCount(0);

        // đổ dữ liệu mới
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scPN = new javax.swing.JScrollPane();
        tbPN = new javax.swing.JTable();
        scCTPN = new javax.swing.JScrollPane();
        tbCTPN = new javax.swing.JTable();
        lbPN = new javax.swing.JLabel();
        lbCTPN = new javax.swing.JLabel();
        tfTimKiem = new javax.swing.JTextField();
        btnTimKiem = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(null);

        tbPN.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã phiếu nhập", "Mã NCC", "Mã NV", "Ngày giờ nhập", "Tổng tiền"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbPN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbPNMouseClicked(evt);
            }
        });
        scPN.setViewportView(tbPN);
        if (tbPN.getColumnModel().getColumnCount() > 0) {
            tbPN.getColumnModel().getColumn(0).setPreferredWidth(20);
            tbPN.getColumnModel().getColumn(1).setPreferredWidth(20);
            tbPN.getColumnModel().getColumn(2).setPreferredWidth(20);
            tbPN.getColumnModel().getColumn(3).setPreferredWidth(70);
            tbPN.getColumnModel().getColumn(4).setPreferredWidth(20);
        }

        add(scPN);
        scPN.setBounds(20, 100, 440, 402);

        tbCTPN.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã phiếu nhập", "Mã sản phẩm", "Số lượng", "Đơn giá"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scCTPN.setViewportView(tbCTPN);

        add(scCTPN);
        scCTPN.setBounds(470, 100, 320, 402);

        lbPN.setBackground(new java.awt.Color(255, 255, 255));
        lbPN.setFont(new java.awt.Font("Myriad Pro", 0, 14)); // NOI18N
        lbPN.setForeground(new java.awt.Color(0, 77, 97));
        lbPN.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbPN.setText("PHIẾU NHẬP");
        add(lbPN);
        lbPN.setBounds(178, 68, 84, 21);

        lbCTPN.setFont(new java.awt.Font("Myriad Pro", 0, 14)); // NOI18N
        lbCTPN.setForeground(new java.awt.Color(0, 77, 97));
        lbCTPN.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbCTPN.setText("CHI TIẾT PHIẾU NHẬP");
        add(lbCTPN);
        lbCTPN.setBounds(561, 71, 139, 19);

        tfTimKiem.setForeground(new java.awt.Color(217, 217, 217));
        tfTimKiem.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tfTimKiem.setText("MM/YYYY");
        tfTimKiem.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)), "Tìm kiếm theo tháng năm", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));
        tfTimKiem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tfTimKiemMouseClicked(evt);
            }
        });
        tfTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfTimKiemKeyPressed(evt);
            }
        });
        add(tfTimKiem);
        tfTimKiem.setBounds(20, 15, 180, 39);

        btnTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IconImage/timkiem.png"))); // NOI18N
        btnTimKiem.setBorder(null);
        btnTimKiem.setBorderPainted(false);
        btnTimKiem.setContentAreaFilled(false);
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });
        add(btnTimKiem);
        btnTimKiem.setBounds(210, 25, 20, 20);
    }// </editor-fold>//GEN-END:initComponents

    private void tbPNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbPNMouseClicked
        DefaultTableModel modelPN = (DefaultTableModel) tbPN.getModel();
        DefaultTableModel modelCTPN = (DefaultTableModel) tbCTPN.getModel();
        if (tbPN.getSelectedRow() != -1) {
            getDataCTPN();
            for (ChiTietPhieuNhap ctpn : ctpnCtrl.search(modelPN.getValueAt(tbPN.getSelectedRow(), 0).toString())) {
                modelCTPN.addRow(ctpn.toArray());
            }
        }
    }//GEN-LAST:event_tbPNMouseClicked

    private void tfTimKiemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfTimKiemMouseClicked
        tfTimKiem.setForeground(Color.BLACK);
        tfTimKiem.setText("");
    }//GEN-LAST:event_tfTimKiemMouseClicked

    private void tfTimKiemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfTimKiemKeyPressed
        DefaultTableModel modelPN = (DefaultTableModel) tbPN.getModel();
        DefaultTableModel modelCTPN = (DefaultTableModel) tbCTPN.getModel();
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (tfTimKiem.getText().equals("") && tfTimKiem.getText().matches("\\s+")) {
                System.out.println("RUN");
                getDataPN();
            } else {//if(tfTimKiem.getText().trim().matches("[0-9]{2}/{0-9]{4}"))
                String[] date = new String[5];
                StringTokenizer token = new StringTokenizer(tfTimKiem.getText().trim(), "/- ");
                int i = 0;
                while (token.hasMoreTokens()) {
                    date[i] = token.nextToken();
//                    System.out.println(i + " = " + date[i]);
                    i++;
                }
                ArrayList<PhieuNhap> dspn = pnCtrl.search(date[0], date[1]);
                if (dspn.size() > 0) {
                    modelPN.setRowCount(0);
                    for (PhieuNhap pn : dspn) {
                        modelPN.addRow(pn.toArray());
                    }
                }
            }
            //else JOptionPane.showMessageDialog(this, "Nhập [tháng]/[năm] cần tìm!");
        }
    }//GEN-LAST:event_tfTimKiemKeyPressed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        DefaultTableModel modelPN = (DefaultTableModel) tbPN.getModel();
        DefaultTableModel modelCTPN = (DefaultTableModel) tbCTPN.getModel();
        if (tfTimKiem.getText().matches("") && tfTimKiem.getText().matches("\\s+")) {
            JOptionPane.showMessageDialog(this, "Nhập [tháng]/[năm] cần tìm!");
            getDataPN();
        } else {
            String[] date = new String[5];
            StringTokenizer token = new StringTokenizer(tfTimKiem.getText().trim(), "/- ");
            int i = 0;
            while (token.hasMoreTokens()) {
                date[i] = token.nextToken();
//                    System.out.println(i + " = " + date[i]);
                i++;
            }
            ArrayList<PhieuNhap> dspn = pnCtrl.search(date[0], date[1]);
            if (dspn.size() > 0) {
                modelPN.setRowCount(0);
                for (PhieuNhap pn : dspn) {
                    modelPN.addRow(pn.toArray());
                }
            }

        }
    }//GEN-LAST:event_btnTimKiemActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JLabel lbCTPN;
    private javax.swing.JLabel lbPN;
    private javax.swing.JScrollPane scCTPN;
    private javax.swing.JScrollPane scPN;
    private javax.swing.JTable tbCTPN;
    private javax.swing.JTable tbPN;
    private javax.swing.JTextField tfTimKiem;
    // End of variables declaration//GEN-END:variables
}
