package FrontEnd.SanPham;

import BackEnd.QuanLySanPham.QuanLySanPhamBUS;
import BackEnd.QuanLySanPham.SanPham;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

public class FrontEndSanPham extends javax.swing.JPanel {

    // Var
    QuanLySanPhamBUS spCtrl = new QuanLySanPhamBUS();
    private String URLImage;

    public FrontEndSanPham() {
        initComponents();
        getData();
        tbSanPham.setRowHeight(20);
    }

    private void getData() {
        DefaultTableModel model = (DefaultTableModel) tbSanPham.getModel();
        // Xóa dữ liệu cũ
        while (model.getRowCount() > 0) {
            model.removeRow(0);
        }

        for (SanPham sp : spCtrl.readDB()) {
            model.addRow(sp.toArraySp());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grThemSuaXoa = new javax.swing.ButtonGroup();
        pnTimKiem = new javax.swing.JPanel();
        btnTimKiem = new javax.swing.JButton();
        tfTimKiem = new javax.swing.JTextField();
        lbHinhAnh = new javax.swing.JLabel();
        tfTenSP = new javax.swing.JTextField();
        tfMaSP = new javax.swing.JTextField();
        tfDonGia = new javax.swing.JTextField();
        tfSoLuong = new javax.swing.JTextField();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        tfLSP = new javax.swing.JTextField();
        sc = new javax.swing.JScrollPane();
        tbSanPham = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(820, 550));
        setMinimumSize(new java.awt.Dimension(820, 550));
        setLayout(null);

        pnTimKiem.setBackground(null
        );
        pnTimKiem.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)), "Nhập vào loại sản phẩm", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(102, 102, 102))); // NOI18N
        pnTimKiem.setPreferredSize(new java.awt.Dimension(180, 50));

        btnTimKiem.setBackground(null);
        btnTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IconImage/timkiem.png"))); // NOI18N
        btnTimKiem.setText(null);
        btnTimKiem.setBorder(null);
        btnTimKiem.setBorderPainted(false);
        btnTimKiem.setContentAreaFilled(false);
        btnTimKiem.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        tfTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfTimKiemKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout pnTimKiemLayout = new javax.swing.GroupLayout(pnTimKiem);
        pnTimKiem.setLayout(pnTimKiemLayout);
        pnTimKiemLayout.setHorizontalGroup(
            pnTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnTimKiemLayout.createSequentialGroup()
                .addComponent(tfTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnTimKiemLayout.setVerticalGroup(
            pnTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTimKiemLayout.createSequentialGroup()
                .addGroup(pnTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(tfTimKiem, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnTimKiem, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(pnTimKiem);
        pnTimKiem.setBounds(620, 10, 180, 45);

        lbHinhAnh.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        lbHinhAnh.setPreferredSize(new java.awt.Dimension(120, 120));
        add(lbHinhAnh);
        lbHinhAnh.setBounds(60, 410, 120, 120);

        tfTenSP.setBackground(null);
        tfTenSP.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)), "Tên sản phẩm", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));
        add(tfTenSP);
        tfTenSP.setBounds(210, 470, 185, 40);

        tfMaSP.setBackground(null);
        tfMaSP.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)), "Mã sản phẩm", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));
        add(tfMaSP);
        tfMaSP.setBounds(210, 410, 120, 40);

        tfDonGia.setBackground(null);
        tfDonGia.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)), "Đơn giá", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));
        add(tfDonGia);
        tfDonGia.setBounds(460, 470, 185, 40);

        tfSoLuong.setBackground(null
        );
        tfSoLuong.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)), "Số lượng", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));
        add(tfSoLuong);
        tfSoLuong.setBounds(520, 410, 120, 40);

        btnThem.setBackground(new java.awt.Color(0, 77, 97));
        btnThem.setForeground(new java.awt.Color(255, 255, 255));
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IconImage/them.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.setBorder(null);
        btnThem.setBorderPainted(false);
        grThemSuaXoa.add(btnThem);
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        add(btnThem);
        btnThem.setBounds(670, 410, 90, 30);

        btnSua.setBackground(new java.awt.Color(0, 77, 97));
        btnSua.setForeground(new java.awt.Color(255, 255, 255));
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IconImage/sua.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.setBorder(null);
        grThemSuaXoa.add(btnSua);
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        add(btnSua);
        btnSua.setBounds(670, 450, 90, 30);

        btnXoa.setBackground(new java.awt.Color(0, 77, 97));
        btnXoa.setForeground(new java.awt.Color(255, 255, 255));
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IconImage/xoa.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.setBorder(null);
        grThemSuaXoa.add(btnXoa);
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        add(btnXoa);
        btnXoa.setBounds(670, 490, 90, 30);

        tfLSP.setBackground(null);
        tfLSP.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)), "Mã loại sản phẩm", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));
        add(tfLSP);
        tfLSP.setBounds(390, 410, 120, 40);

        tbSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã sản phẩm", "Mã LSP", "Tên sản phẩm", "Số lượng", "Đơn giá", "Hình ảnh"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbSanPham.setColumnSelectionAllowed(true);
        tbSanPham.getTableHeader().setReorderingAllowed(false);
        tbSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbSanPhamMouseClicked(evt);
            }
        });
        sc.setViewportView(tbSanPham);
        tbSanPham.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (tbSanPham.getColumnModel().getColumnCount() > 0) {
            tbSanPham.getColumnModel().getColumn(0).setPreferredWidth(25);
            tbSanPham.getColumnModel().getColumn(1).setPreferredWidth(25);
            tbSanPham.getColumnModel().getColumn(2).setPreferredWidth(185);
            tbSanPham.getColumnModel().getColumn(3).setPreferredWidth(25);
            tbSanPham.getColumnModel().getColumn(4).setPreferredWidth(45);
            tbSanPham.getColumnModel().getColumn(5).setPreferredWidth(45);
        }

        add(sc);
        sc.setBounds(20, 70, 780, 320);
    }// </editor-fold>//GEN-END:initComponents

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        DefaultTableModel model = (DefaultTableModel) tbSanPham.getModel();

        ArrayList<SanPham> dssp = spCtrl.search(tfTimKiem.getText().trim());
        if (dssp.size() == 0) {
            JOptionPane.showMessageDialog(this, "Không tìm thấy sản phẩm " + tfTimKiem.getText().trim());
        } else {
            while (model.getRowCount() > 0) {
                model.removeRow(0);
            }
            for (SanPham sp : dssp) {
                model.addRow(sp.toArraySp());
            }
        }
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void tfTimKiemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfTimKiemKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            DefaultTableModel model = (DefaultTableModel) tbSanPham.getModel();

            ArrayList<SanPham> dssp = spCtrl.search(tfTimKiem.getText().trim());
            if (dssp.size() == 0) {
                JOptionPane.showMessageDialog(this, "Không tìm thấy sản phẩm " + tfTimKiem.getText().trim());
            } else {
                while (model.getRowCount() > 0) {
                    model.removeRow(0);
                }
                for (SanPham sp : dssp) {
                    model.addRow(sp.toArraySp());
                }
            }
        }
    }//GEN-LAST:event_tfTimKiemKeyPressed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        JTextField[] tfTT = {tfLSP, tfMaSP, tfTenSP, tfSoLuong, tfDonGia};
        for (JTextField tf : tfTT) {
            if (tf.getText().matches("") || tf.getText().matches("\\s+")) {
                JOptionPane.showMessageDialog(this, "Điền không đủ thông tin!");
                return;
            }
        }
        spCtrl.add(
                tfMaSP.getText(), tfLSP.getText(), tfTenSP.getText(), Integer.parseInt(tfSoLuong.getText()), Double.parseDouble(tfDonGia.getText()), "***.jpg");
        getData();
        JOptionPane.showMessageDialog(this, "Cập nhật dữ liệu thành công!");
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        DefaultTableModel model = (DefaultTableModel) tbSanPham.getModel();
        if (tbSanPham.getSelectedRow() != -1) {
            if (spCtrl.update(tfMaSP.getText(), tfLSP.getText(), tfTenSP.getText(), Integer.parseInt(tfSoLuong.getText()),
                    Double.parseDouble(tfDonGia.getText()), URLImage)) {
                while (model.getRowCount() > 0) {
                    model.removeRow(0);
                }
                getData();
                JOptionPane.showMessageDialog(this, "Cập nhật dữ liệu thành công!");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Chọn sản phẩm cần sửa!");
            while (model.getRowCount() > 0) {
                model.removeRow(0);
            }
            getData();
            return;
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        DefaultTableModel model = (DefaultTableModel) tbSanPham.getModel();
        if (tbSanPham.getSelectedRow() != -1) {
            if (spCtrl.delete(tfMaSP.getText())) {
                while (model.getRowCount() > 0) {
                    model.removeRow(0);
                }
                getData();
                JOptionPane.showMessageDialog(this, "Cập nhật dữ liệu thành công!");
            }

        } else {
            JOptionPane.showMessageDialog(this, "Chọn sản phẩm cần sửa!");
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void tbSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbSanPhamMouseClicked
        DefaultTableModel model = (DefaultTableModel) tbSanPham.getModel();
        tfMaSP.setText(model.getValueAt(tbSanPham.getSelectedRow(), 0).toString());
        tfLSP.setText(model.getValueAt(tbSanPham.getSelectedRow(), 1).toString());
        tfTenSP.setText(model.getValueAt(tbSanPham.getSelectedRow(), 2).toString());
        tfSoLuong.setText(model.getValueAt(tbSanPham.getSelectedRow(), 3).toString());
        tfDonGia.setText(model.getValueAt(tbSanPham.getSelectedRow(), 4).toString());
        URLImage = model.getValueAt(tbSanPham.getSelectedRow(), 5).toString();
        setIcon(model.getValueAt(tbSanPham.getSelectedRow(), 5).toString());
    }//GEN-LAST:event_tbSanPhamMouseClicked
                                     
    private void setIcon(String s){
//        Cách 1
        try {
            BufferedImage image = ImageIO.read(new File("src/PhoneImage/" + s));
            ImageIcon icon = new ImageIcon(image.getScaledInstance(120, 120, BufferedImage.SCALE_SMOOTH));
            lbHinhAnh.setIcon(icon);
        } catch (IOException e) {
            System.out.println(e);
        }

//      Cách 2
//        ImageIcon img = new ImageIcon(getClass().getResource("/PhoneImage/" + s));
//        Image imgScaled = img.getImage().getScaledInstance(120, 120, Image.SCALE_DEFAULT);
//        lbHinhAnh.setIcon(new ImageIcon(imgScaled));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.ButtonGroup grThemSuaXoa;
    private javax.swing.JLabel lbHinhAnh;
    private javax.swing.JPanel pnTimKiem;
    private javax.swing.JScrollPane sc;
    private javax.swing.JTable tbSanPham;
    private javax.swing.JTextField tfDonGia;
    private javax.swing.JTextField tfLSP;
    private javax.swing.JTextField tfMaSP;
    private javax.swing.JTextField tfSoLuong;
    private javax.swing.JTextField tfTenSP;
    private javax.swing.JTextField tfTimKiem;
    // End of variables declaration//GEN-END:variables
}
